openapi: 3.0.0
info:
  title: Jobs API
  contact: {}
  version: '1.0'
servers:
- url: https://jobs-api-1285.onrender.com/api/v1
  variables: {}
paths:
  /auth/register:
    post:
      tags:
      - Auth
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RegisterUserRequest'
            example:
              name: peter
              email: peter@gmail.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
    parameters: []
  /auth/login:
    post:
      tags:
      - Auth
      summary: User Login
      operationId: UserLogin
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UserLoginRequest'
            example:
              email: peter@gmail.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
    parameters: []
  /jobs:
    post:
      tags:
      - Jobs
      summary: Create Job
      operationId: CreateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateJobRequest'
            example:
              company: Facebook
              position: back-end
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    get:
      tags:
      - Jobs
      summary: Get All Jobs
      operationId: GetAllJobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    parameters: []
  /jobs/{id}:
    get:
      tags:
      - Jobs
      summary: Get Single Job
      operationId: GetSingleJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    patch:
      tags:
      - Jobs
      summary: Update Job
      operationId: UpdateJob
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateJobRequest'
            example:
              company: Google
              position: back-end
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    delete:
      tags:
      - Jobs
      summary: Delete Job
      operationId: DeleteJob
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
components:
  schemas:
    RegisterUserRequest:
      title: RegisterUserRequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
    UserLoginRequest:
      title: UserLoginRequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    CreateJobRequest:
      title: CreateJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
    UpdateJobRequest:
      title: UpdateJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: Auth
  description: ''
- name: Jobs
  description: ''